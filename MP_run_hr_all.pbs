#!/bin/sh
## job name
#PBS -N ple_hr_all_1120
## maximum runtime
#PBS -l walltime=24:00:00
## select number of nodes, cpus (per node) and memory (per node)
###PBS -l select=7:ncpus=24:mpiprocs=21:mem=100gb
#PBS -l select=1:ncpus=128:mpiprocs=128:mem=920gb
## standard output standard error
#PBS -o reports
#PBS -e reports
## array job
###PBS -J 11-29
##PBS_ARRAY_INDEX=10
## start job after another job finished?
###PBS -W depend=afterany:2521439.pbs
########### parameters
STOCK_ID="'"'ple.27.7e'"'"
OM="'"'baseline'"'"
N_WORKERS=100
SCENARIO="'"'all'"'"

### print details about job
echo ""
echo "This is job $PBS_JOBID index $PBS_ARRAY_INDEX"
echo "The following ressources have been allocated"
cat $PBS_NODEFILE
echo ""

### set working directory
cd $HOME/git/WKBPLAICE2024_ple.27.7e_MSE/

## load modules
## anaconda includes R and OpenMPI
module purge
module load mpi/intel-2018.1.163
module load anaconda3/personal
### activate MPI environment
source activate R2024_R4.4.1

echo "starting the simulations..."
### run job
### when running with MPI, worker count is one less than selected cores
#mpiexec 
#--max-connections=256 ### increase max if needed
R CMD BATCH --no-save --no-restore "--args use_MPI=FALSE n_workers=$N_WORKERS n_blocks=1 ga_parallel=TRUE popSize=1000 maxiter=100 run=10 stock_id=$STOCK_ID n_iter=1000 n_yrs=20 scenario=$SCENARIO MP='hr' OM=$OM ga_search=TRUE idxB_lag=FALSE idxB_range_3=TRUE exp_b=FALSE comp_b_multiplier=TRUE interval=TRUE multiplier=TRUE upper_constraint=1.2 lower_constraint=0.7 obj_fun='ICES' obj_yrs='11:20' stat_yrs='multiple' pen_neg=FALSE pen_max=1 pen_infl=0.06 pen_steep=1000 collate=TRUE add_suggestions=TRUE" $HOME/git/WKBPLAICE2024_ple.27.7e_MSE/MP_run.R $HOME/reports/$PBS_JOBID.$PBS_ARRAY_INDEX.Rout
## $PBS_ARRAY_INDEX

echo ""
echo "R job finished!"
echo ""

## print details about job
echo "job details from PBS:"
echo "==============================================================================="
qstat -f
echo "==============================================================================="
qstat -t
echo "==============================================================================="




